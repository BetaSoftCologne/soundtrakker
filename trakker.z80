	;
flo:
	equ	#1c
bild:
	equ	#100
puf:
	equ	#800
puf1:
	equ	#900
hadr:
	equ	#12c0
font:
	equ	#1c00
tabel:
	equ	#2200
spc:
	equ	#2400
misc:
	equ	spc+3
clg:
	equ	spc+6
para:
	equ	spc+#c
setup:
	equ	spc+#f
mfont:
	equ	spc+#12
help:
	equ	spc+#18
sped:
	equ	#4bfb
loot:
	equ	#4bfc
leng:
	equ	#4bfd
higt:
	equ	#4bfe
panz:
	equ	#4bff
disc:
	equ	#8000
cls:
	equ	#8003
decz:
	equ	#8006
ied:
	equ	#8800
oed:
	equ	#8803
chan:
	equ	#af08
kbd:
	equ	#bb1b
	org	#9000
xy:
	defb	0,0
	jp	este
	jp	chr
	jp	xt
	jp	maus
	jp	hexo
	jp	hexo2
	jp	oli
	jp	cler
	jp	taus
	jp	sync
	jp	swi1
	jp	wahl
	jp	chos
	jp	init
	jp	mfs
	jp	prins
	jp	ddr
	jp	name
	jp	jupp
	jp	sur1
	jp	maxi
	;ent	$
este:
	ld	a,(#8000)
	cp	#c3
	ret	nz
	ld	a,1
	call	#bc0e
	ld	bc,#bc01
	out	(c),c
	inc	b
	xor	a
	out	(c),a
	ld	b,a
	ld	c,a
	call	#bc32
	ld	a,1
	ld	bc,#1a1a
	call	#bc32
	ld	a,2
	ld	bc,#202
	call	#bc32
	ld	a,3
	ld	bc,#909
	call	#bc32
	ld	bc,0
	call	#bc38
	call	rick
	ld	hl,(key1)
	call	#bb3f
	xor	a
	ld	(ins),a
	ld	(pins),a
	dec	a
	ld	(#be78),a
	ld	a,1
	ld	(ch1),a
	ld	(ch2),a
	ld	(ch3),a
	ld	(#be66),a
	ld	a,ein
	ld	(reg7),a
	ld	a,(pek)
	ld	(num),a
	ld	a,#c9
	ld	(#bb5a),a
	ld	hl,#4ad0
	ld	(posa),hl
	ld	hl,blk
	ld	(#af00),hl
	ld	hl,menu
	ld	(#af02),hl
	ld	hl,msg1
	ld	(#af04),hl
	ld	hl,fad+1
	ld	(#af06),hl
	ld	hl,tona
	ld	(chan),hl
	ld	(#b000),hl
	ld	hl,tonb
	ld	(#b002),hl
	ld	hl,tonc
	ld	(#b004),hl
	ld	hl,#bef0
	ld	de,#bef1
	ld	bc,15
	ld	(hl),0
	ldir
	ld	bc,#7fc5
	out	(c),c
	ld	hl,#100
	ld	de,#4000
	ld	bc,#3f00
	push	hl
	push	de
	push	bc
	ldir
	ld	bc,#7fc6
	out	(c),c
	pop	bc
	pop	hl
	pop	de
	ldir
	ld	bc,#7fc4
	out	(c),c
	call	bild
	ld	hl,#100
	ld	de,#101
	ld	bc,#bff
	ld	(hl),l
	ldir
	call	mfont
	ld	hl,msg1
	call	xt
	ld	hl,msg1b
	call	xt
	call	clg
	call	help
	ld	a,64
	ld	(leng),a
	ld	a,23
	ld	(mad),a
	call	name
	xor	a
	call	mfs
	ld	a,(panz)
	call	ddr
	xor	a
	call	prins
	xor	a
	call	swan
	ld	a,3
	call	endoc
	xor	a
	call	jupp
	call	sync
	ld	bc,#bc01
	out	(c),c
	ld	bc,#bd28
	out	(c),c
	ld	hl,menu
	ld	(blk),hl
	xor	a
	call	init
	ld	hl,#bf00
	ld	de,irq
	ld	bc,#80ff
	call	#bcd7
main:
	call	kbd
	jr	nc,main
	cp	#fc
	jp	z,ende
	cp	"["
	call	z,pag1
	cp	"]"
	call	z,pag2
	call	wahl
	call	z,chos
	call	swi
	call	oli
	jp	main
swi:
	cp	9
	call	z,para
	jr	swi1
	defw	mfs,ddr,laus,psped,ppos,patn
swi1:
	cp	#87
	call	z,incep
	cp	#84
	call	z,decep
swi2:
	cp	#88
	call	z,nexti
	cp	#85
	call	z,previ
	cp	#89
	call	z,octu
	cp	#86
	call	z,octd
	cp	#81
	call	z,io1
	cp	#82
	call	z,io2
	cp	#83
	call	z,io3
	ret
ende:
	call	taus
	ld	hl,#bf00
	call	#bcdd
	ld	bc,#7fc5
	out	(c),c
	ld	hl,#4000
	ld	de,#100
	ld	bc,#3f00
	ldir
	ld	bc,#7fc0
	out	(c),c
	ld	a,#cf
	ld	(#bb5a),a
	xor	a
	ld	(#be78),a
	ret
pag1:
	ld	hl,#1000
	ld	a,(hadr+1)
	sub	h
	ret	z
	ld	(hadr),hl
	jp	help
pag2:
	ld	hl,#12d0
	ld	a,(hadr+1)
	sub	h
	ret	z
	ld	(hadr),hl
	jp	help
wahl:

	cp	240
	call	z,bup
	cp	241
	call	z,bdow
	cp	242
	call	z,blef
	cp	243
	call	z,brig
	cp	32
	ret	z
	cp	13
	ret
bup:
	ld	ix,(blk)
	call	erz
	ld	a,(mp)
	cp	b
	jr	c,hut
	call	eras
	ld	a,(mp)
	sub	b
	ld	(mp),a
	jp	bar
bdow:
	ld	ix,(blk)
	call	erz
	ld	a,(mp)
	cp	b
	jr	nc,hut
	call	eras
	ld	a,(mp)
	add	a,b
	ld	(mp),a
	jp	bar
hut:
	xor	a
	ret
erz:
	ld	b,(ix)
	inc	b
	srl	b
	ret
blef:
	call	eras
	ld	ix,(blk)
	ld	a,(mp)
	or	a
	jr	z,neul
	dec	a
	ld	(mp),a
	jp	bar
neul:
	ld	a,(ix)
	ld	(mp),a
	jp	bar
brig:
	call	eras
	ld	ix,(blk)
	ld	a,(mp)
	cp	(ix)
	jr	z,neur
	inc	a
init:
	ld	(mp),a
	jp	bar
neur:
	xor	a
	ld	(mp),a
	jp	bar
eras:
	ld	a,(mp)
	push	bc
	call	qer
	call	txt
	pop	bc
	ret
bar:
	ld	a,(mp)
	call	qer
	ld	a,22
	call	chr
	call	txt
	ld	a,22
	jp	chr
rbar:
	ld	hl,(luc)
	ld	(xy),hl
	ld	b,(ix+2)
	inc	b
	inc	b
juk:
	push	bc
	call	maus
	ld	hl,xy+1
	inc	(hl)
	pop	bc
	djnz	juk
	ret
qer:
	ld	b,a
	ld	ix,(blk)
	inc	ix
	or	a
	ret	z
su1:
	ld	d,0
	ld	e,(ix+2)
	add	ix,de
	ld	de,5
	add	ix,de
	djnz	su1
	ret
txt:
	ld	h,(ix)
	ld	l,(ix+1)
	ld	(xy),hl
	ld	(luc),hl
	ld	a,32
	call	chr
	ld	b,(ix+2)
	push	ix
	pop	hl
	inc	hl
	inc	hl
	inc	hl
pri1:
	ld	a,(hl)
	call	chr
	inc	hl
	djnz	pri1
	ld	a,32
	call	chr
	ld	e,(hl)
	inc	hl
	ld	d,(hl)
	ex	de,hl
	ld	(pnt),hl
	ret
chos:
	ld	hl,(pnt)
	ld	a,h
	or	l
	ret	z
	push	hl
	call	bar
	call	rbar
	call	cler
	pop	hl
	call	#1e
	call	bar
	xor	a
	ret
spie:
	xor	a
	ld	(spie1),a
	ld	a,(pek)
	ld	(num),a
	ld	a,#c9
	ld	(toki),a
	call	resv
spiel:
	call	sync
	ld	a,(dly)
	ld	hl,sped
	cp	(hl)
	call	z,ple
	call	kbd
	jr	nc,spiel
	cp	#fc
	jp	z,send
	call	swi1
	jp	spiel
rec:
	xor	a
	ld	(spie1),a
	ld	(cur),a
	ld	a,(pek)
	ld	(num),a
	ld	a,#c9
	ld	(daun),a
	ld	hl,hexe
	ld	(pexe),hl
	call	resv
	ld	a,-3
	call	rech
rec0:
	call	kbd
	jr	nc,rec0
	cp	#fc
	jr	nz,reca
renda:
	xor	a
	ld	(daun),a
	ld	a,#c9
	ld	(cur),a
	ld	hl,play
	ld	(pexe),hl
	jp	sand
rec1:
	call	kbd
	jr	nc,rec2
	cp	#fc
	jr	z,renda
	cp	242
	call	z,left
	cp	243
	call	z,rigt
	cp	246
	call	z,shil
	cp	247
	call	z,shir
reca:
	call	swi2
	call	input
	call	cler
rec2:
	ld	a,(dly)
	ld	hl,sped
	cp	(hl)
	call	z,plu
	jp	rec1
song:

	ld	a,21
	call	#bb1e
	ld	a,0
	jr	nz,star
	ld	a,(ppos)
star:
	call	begi
	call	mfs1
	xor	a
	ld	(spie1),a
	ld	a,(anpa+1)
	ld	(down),a
	ld	a,#c9
	ld	(toki),a
	ld	hl,funk
	call	xt
	call	tein
	call	resv
songl:
	call	sync
	ld	a,(dly)
	ld	hl,sped
	cp	(hl)
	call	z,plur
	call	kbd
	jr	nc,songl
	cp	#fc
	jr	z,send
	cp	#81
	call	z,io1
	cp	#82
	call	z,io2
	cp	#83
	call	z,io3
	jr	songl
plur:
	call	ple
	ld	hl,down
	dec	(hl)
	ret	nz
	ld	a,(anpa+1)
	ld	(hl),a
	call	resv
	ld	a,(ppos)
	inc	a
	ld	hl,panz
	cp	(hl)
	jp	nz,mfs1
	ld	a,(loot)
	jp	mfs1
begi:
	ld	hl,panz
	cp	(hl)
	ret	c
	xor	a
	ret
resv:
	ld	a,16
	ld	(tona+lins),a
	ld	(tonb+lins),a
	ld	(tonc+lins),a
	ret
send:
	xor	a
	ld	(toki),a
	ld	(path+1),a
sand:
	ld	a,#c9
	ld	(spie1),a
	ld	a,(pek)
	call	rech
	ld	a,(patn)
	call	jupp
	call	taus
	call	clg
	jp	cler
spie1:
	ret
	call	spc
	ld	hl,dly
	dec	(hl)
	ret	nz
	ld	a,(sped)
	ld	(hl),a
	ret
disk:
	call	disc
	call	name
	ld	a,(sped)
	call	psped
	jp	help
insed:
	call	ied
	jp	help
orned:
	call	oed
	jp	help
setu:
	call	setup
	jp	help
other:
	call	misc
	jp	help
edit:
	xor	a
	ld	(cur),a
	ld	a,#c9
	ld	(psped),a
	ld	a,(xp)
	call	cur
loop:
	call	kbd
	jr	nc,loop
	cp	#fc
	jp	z,end
	cp	9
	call	z,swit
	cp	16
	call	z,klo
	cp	128
	call	z,inse
	cp	138
	call	z,entf
	cp	240
	call	z,patu
	cp	241
	call	z,patd
	cp	244
	call	z,spau
	cp	245
	call	z,spad
	cp	224
	call	z,plu
	cp	242
	call	z,left
	cp	243
	call	z,rigt
	cp	246
	call	z,shil
	cp	247
	call	z,shir
	cp	"!"
	call	z,cutv
	cp	34
	call	z,clrv
	cp	"#"
	call	z,cpyv
	cp	"$"
	call	z,cutp
	cp	"%"
	call	z,clrp
	cp	"&"
	call	z,cpyp
	ld	hl,(xy)
	push	hl
	call	swi1
	pop	hl
	ld	(xy),hl
	call	input
	jp	loop
end:
	call	taus
	xor	a
	ld	(psped),a
	ld	a,#c9
	ld	(cur),a
	call	patt
cler:
	call	kbd
	jr	c,cler
	ret
input:
	ld	b,a
	ld	ix,(eadr)
	ld	a,(typ)
	cp	1
	jr	z,octin
	jr	nc,hexin
tonin:
	ld	a,b
	cp	127
	jr	z,delt
	push	ix
	call	oli
	pop	ix
	or	a
	ret	z
	ld	a,(lastk)
	ld	b,1
	cp	12
	jr	c,nodiv
div:
	inc	b
	sub	12
	cp	12
	jr	nc,div
nodiv:
	inc	a
	and	15
	add	a,a
	add	a,a
	add	a,a
	add	a,a
	or	b
	ld	(ix),a
	ld	a,(ix+1)
	and	15
	ld	b,a
	ld	a,(ins)
	add	a,a
	add	a,a
	add	a,a
	add	a,a
	or	b
	ld	(ix+1),a
	jp	daun
delt:
	xor	a
	ld	(ix),a
	ld	(ix+1),a
	ld	(ix+2),a
	jp	daun
octin:
	ld	a,b
	cp	49
	ret	c
	cp	57
	ret	nc
	ld	c,a
	sub	48
	ld	b,a
schi:
	ld	a,(ix)
	or	a
	ret	z
	cp	#d0
	ret	z
	and	240
	or	b
	ld	(ix),a
	jp	daun
hexin:
	ld	a,b
	cp	127
	jp	z,delh
	cp	48
	ret	c
	cp	59
	jr	c,nozi
	res	5,a
	cp	"A"
	ret	c
	cp	"G"
	ret	nc
	sub	7
nozi:
	sub	48
	ld	b,a
	ld	a,(xp)
	cp	7
	jr	c,nosub
	sub	6
	cp	7
	jr	c,nosub
	sub	6
nosub:
	sub	3
	jr	z,inp0
	dec	a
	jr	z,inp1
	dec	a
	jr	z,inp2
inp3:
	ld	a,(ix+2)
	call	inlo
	ld	(ix+2),a
	jr	daun
inp2:
	ld	a,(ix+2)
	call	inhi
	ld	(ix+2),a
	jr	daun
inp1:
	ld	a,(ix+1)
	call	inlo
	ld	(ix+1),a
	jr	daun
inp0:
	ld	a,(ix+1)
	call	inhi
	ld	(ix+1),a
daun:
	nop
	call	pla0
	ld	a,(dflg)
	or	a
	jp	nz,patd
	ld	a,(xp)
	jp	cur
klo:
	ld	hl,(eadr)
	ld	(hl),#d0
	jp	daun
inhi:
	and	15
	ld	c,a
	ld	a,b
	rlca
	rlca
	rlca
	rlca
	or	c
	ret
inlo:
	and	240
	or	b
	ret
delh:
	ld	a,(ix+1)
	and	240
	ld	(ix+1),a
	ld	(ix+2),0
	jr	daun
shil:
	ld	a,(xp)
	cp	7
	jr	c,shi1
	sub	6
	jr	nrig+2
shi1:
	add	a,12
	jr	nrig+2
shir:
	ld	a,(xp)
	cp	13
	jr	nc,shi2
	add	a,6
	jr	nrig+2
shi2:
	sub	12
	jr	nrig+2
left:
	ld	a,(xp)
	cp	1
	jr	z,nlef
	dec	a
	jr	nrig+2
nlef:
	ld	a,18
	jr	nrig+2
rigt:
	ld	a,(xp)
	cp	18
	jr	z,nrig
	inc	a
	jr	nrig+2
nrig:
	ld	a,1
	ld	(xp),a
cur:
	ret
	push	af
	ld	hl,#515
	ld	(xy),hl
	ld	a,(num)
	add	a,3
	call	anpa
	call	getp
	ld	(eadr),hl
	push	hl
	pop	ix
	ld	hl,fast
	ld	(exe+1),hl
	ld	hl,tabel+138
	ld	(sta),hl
	ld	hl,foh+3
	call	line
	ld	hl,chr
	ld	(exe+1),hl
	pop	af
	dec	a
	ld	d,0
	ld	e,a
	ld	hl,pss
	add	hl,de
	add	hl,de
	ld	a,(hl)
	inc	a
	inc	a
	ld	(merk),a
	ld	(xy+1),a
	inc	hl
	ld	a,(hl)
	ld	(typ),a
	ld	b,7
	call	maus+2
	ld	hl,tona
	ld	b,0
	ld	a,(xp)
	cp	7
	jr	c,eintr
	ld	hl,tonb
	inc	b
	cp	13
	jr	c,eintr
	ld	hl,tonc
	inc	b
eintr:
	ld	(chan),hl
	ld	a,b
	ld	(ch),a
	add	a,a
	add	a,b
	ld	d,0
	ld	e,a
	ld	ix,(eadr)
	add	ix,de
	ld	(eadr),ix
	ld	hl,(panf)
	add	hl,de
	ld	(voic),hl
	xor	a
	ret
inse:
	call	ganz
	ret	z
	ld	ix,(voic)
	ld	de,(npln)
	add	ix,de
	ld	de,-9
	add	ix,de
einf:
	ld	a,(ix-9)
	ld	(ix),a
	ld	a,(ix-8)
	ld	(ix+1),a
	ld	a,(ix-7)
	ld	(ix+2),a
	add	ix,de
	djnz	einf
	jr	klar
entf:
	call	ganz
	ret	z
	ld	ix,(eadr)
	ld	de,9
entf1:
	ld	a,(ix+9)
	ld	(ix),a
	ld	a,(ix+10)
	ld	(ix+1),a
	ld	a,(ix+11)
	ld	(ix+2),a
	add	ix,de
	djnz	entf1
klar:
	xor	a
	ld	(ix),a
	ld	(ix+1),a
	ld	(ix+2),a
	jp	patt
ganz:
	ld	a,(num)
	add	a,3
	call	anpa
	ld	c,a
	ld	a,b
	sub	c
	dec	a
	ld	b,a
	ret
clir:
	call	cls
	ld	hl,cltx
	call	xt
	call	maus
waic:
	call	cler
	call	#bb06
	cp	#fc
	jp	z,help
	res	5,a
	cp	"A"
	jr	z,all
	cp	"S"
	jr	z,csng
	cp	"I"
	jr	z,cins
	jr	waic
all:
	call	wirk
	jp	nz,help
	ld	ix,alct
	jr	obi
csng:
	call	wirk
	jp	nz,help
	ld	ix,snct
obi:
	call	kill
	ld	a,6
	call	psped
	jr	ebi
cins:
	call	wirk
	jp	nz,help
	ld	ix,inct
	call	kill
ebi:
	xor	a
	call	prins
	ld	a,(peng)
	call	spal
	xor	a
	call	mfs1
	xor	a
	call	laus
	ld	a,1
	call	ddr
	call	name
	call	tein
	jp	help
kill:
	ld	a,(ix+1)
	cp	#ff
	ret	z
	ld	h,a
	ld	l,(ix)
	ld	d,(ix+3)
	ld	e,(ix+2)
	ld	b,(ix+4)
kil2:
	ld	(hl),b
	inc	hl
	dec	de
	ld	a,d
	or	e
	jr	nz,kil2
	ld	de,6
	add	ix,de
	jr	kill
wirk:
	call	chr
	ld	a,(leng)
	ld	(peng),a
	ld	hl,#10e
sur1:
	ld	(xy),hl
	ld	hl,sure
	call	xt
	call	maus
	call	cler
	call	#bb18
	res	5,a
	cp	"Y"
	ret	nz
	call	chr
	sub	a
	ret
swit:
	call	cler
	ld	a,(dflg)
swan:
	xor	1
	ld	(dflg),a
	ld	b,"&"
	jr	z,swot
	ld	b,"'"
swot:
	ld	a,b
	ld	hl,#217
	ld	(xy),hl
	call	chr
	xor	a
	ret
cutv:
	ld	a,(anpa+1)
	ld	hl,(voic)
	ld	de,puf
cut1:
	ldi
	ldi
	ldi
	ld	bc,6
	add	hl,bc
	dec	a
	jr	nz,cut1
	ret
clrv:
	call	cutv
	ld	a,(anpa+1)
	ld	hl,(voic)
	ld	bc,7
clr1:
	ld	(hl),b
	inc	hl
	ld	(hl),b
	inc	hl
	ld	(hl),b
	add	hl,bc
	dec	a
	jr	nz,clr1
	jp	patt
cpyv:
	ld	a,(anpa+1)
	ld	hl,puf
	ld	de,(voic)
past1:
	ldi
	ldi
	ldi
	ex	de,hl
	ld	bc,6
	add	hl,bc
	ex	de,hl
	dec	a
	jr	nz,past1
	jp	patt
cutp:
	ld	hl,(panf)
	ld	de,puf1
	ld	bc,(npln)
	ldir
	ret
clrp:
	call	cutp
	ld	hl,(panf)
	ld	d,h
	ld	e,l
	ld	bc,(npln)
	dec	bc
	inc	de
	ld	(hl),0
	ldir
	jp	patt
cpyp:
	ld	hl,puf1
	ld	de,(panf)
	ld	bc,(npln)
	ldir
	jp	patt
maxi:
	ld	(mad),a
	ld	a,b
spal:
	ld	(leng),a
	ld	(anpa+1),a
	ld	(hui+1),a
	sub	3
	ld	(pek),a
	ld	a,(anpa+1)
	ld	h,0
	ld	l,a
	ld	d,h
	ld	e,l
	add	hl,hl
	add	hl,hl
	add	hl,hl
	add	hl,de
	ld	(npln),hl
	xor	a
	jp	jupp
anpa:
	ld	b,64
	cp	#80
	jr	nc,oma
	cp	b
	ret	c
	sub	b
	ret
oma:
	add	a,b
	ret
maus:
	ld	b,8
	ld	a,#c9
	ld	(cend),a
	call	cpos
	xor	a
	ld	(cend),a
lurk:
	ld	a,(hl)
	rrca
	rrca
	rrca
	rrca
	xor	240
	ld	(hl),a
	inc	hl
	ld	a,(hl)
	rrca
	rrca
	rrca
	rrca
	xor	240
	ld	(hl),a
	dec	hl
	ld	a,h
	add	a,8
	ld	h,a
	djnz	lurk
	ret
psped:
	nop
	ld	(sped),a
	dec	a
	ld	(dly),a
	ld	hl,#1507
	ld	(xy),hl
	inc	a
	push	af
	ld	b,#c3
	cp	2
	jr	nz,nofa
	ld	b,#c9
nofa:
	ld	a,b
	ld	(spc),a
	pop	af
	jp	decz
jell:
	xor	a
	ret
ddr:
	ld	(panz),a
	ld	hl,#1505
	ld	(xy),hl
	push	af
	call	decz
	pop	bc
	ld	a,(loot)
	cp	b
	ret	c
	ld	a,b
	dec	a
	jr	laus
laus:
	ld	(loot),a
	ld	hl,#1506
	ld	(xy),hl
    jp	decz
mfs:
    and	63
    ld	(ppos),a
	ld	hl,#4ad0
	ld	d,0
	ld	e,a
	add	hl,de
	ld	(posa),hl
	ld	a,(hl)
	push	af
	push	hl
	ld	hl,#b05
	ld	(xy),hl
	ld	a,(ppos)
	call	decz
	pop	hl
	ld	de,#d0
	add	hl,de
	ld	a,(hl)
	ld	(pthi),a
	ld	hl,#b07
	ld	(xy),hl
	call	mfs2
	pop	af
	jp	prip
mfs1:
	call	mfs
	ld	a,(pthi)
	ld	(path+1),a
	ret
mfs2:
	call	mfs2
	ld	a,b
	call	chr
	ld	a,c
	jp	chr
mfs3:
	ld	bc,#2030
	or	a
	ret	z
	cp	#80
	jr	nc,mfs4
	ld	b,"+"
	jr	mfs5
mfs4:
	ld	b,"-"
	ld	c,a
	xor	a
	sub	c
mfs5:
	add	a,#30
	ld	c,a
	ret
io1:
	ld	a,(ch1)
	xor	1
	ld	(ch1),a
	ld	b,8
	call	leis
	ld	b,"a"
	ld	hl,#105
	jr	pra
io2:
	ld	a,(ch2)
	xor	1
	ld	(ch2),a
	ld	b,9
	call	leis
	ld	b,"b"
	ld	hl,#106
	jr	pra
io3:
	ld	a,(ch3)
	xor	1
	ld	(ch3),a
	ld	b,10
	call	leis
	ld	b,"c"
	ld	hl,#107
pra:
	ld	(xy),hl
	ld	c,2
	or	a
	jr	z,prit
	ld	c,flo
	res	5,b
prit:
	ld	a,c
	ld	(fad+2),a
	ld	a,b
	call	chr
	ld	a,flo
	ld	(fad+2),a
	ret
leis:
	push	af
	or	a
	jr	nz,nolei
	ld	a,b
	ld	c,0
	call	reg
nolei:
	pop	af
	ret
patp:
	add	a,d
	defb	#fe
mad:
	defb	23
	ret	c
	xor	a
	ret
patm:
	sub	d
	ret	p
	ld	a,(mad)
	dec	a
	ret
kast:
	ld	a,21
	call	#bb1e
	ld	d,1
	jr	z,kas1
	ld	d,8
kas1:
	ld	a,(patn)
	ret
incep:
	call	kast
	call	patp
	jr	jupp
decep:
	call	kast
	call	patm
jupp:
	ld	(patn),a
	ld	hl,#212
pril:
	ld	(xy),hl
	call	calc
	jp	patt
prip:
	ld	hl,#b06
	ld	(xy),hl
	ld	hl,(posa)
	ld	(hl),a
	ld	(spat),a
calc:
	push	af
	call	decz
	pop	af
	ld	hl,0
	or	a
	jr	z,nomu
	ld	de,(npln)
mult:
	add	hl,de
	dec	a
	jr	nz,mult
nomu:
	ld	de,#4c00
	add	hl,de
	ld	(panf),hl
	ld	a,(pek)
	ld	(num),a
	call	getp
	ld	(padr),hl
	ret
nexti:
	ld	a,(ins)
	inc	a
	jr	prins
previ:
	ld	a,(ins)
	dec	a
prins:
	and	15
	ld	(ins),a
	push	af
	ld	hl,#1f06
	ld	(xy),hl
	call	hexo2
	ld	hl,#1807
	ld	(xy),hl
	pop	af
	add	a,a
	add	a,a
	add	a,a
	ld	hl,#4b18
	ld	d,0
	ld	e,a
	add	hl,de
	ld	b,8
plip:
	ld	a,(hl)
	call	chr
	inc	hl
	djnz	plip
	ret
octu:
	ld	a,(oct)
	cp	7
	jr	z,endoc
	inc	a
	jr	endoc
octd:
	ld	a,(oct)
	cp	1
	jr	z,endoc
	dec	a
endoc:
	ld	(oct),a
	push	af
	ld	hl,#1f05
	ld	(xy),hl
	call	hexo2
	pop	af
	dec	a
	add	a,a
	add	a,a
	ld	b,a
	add	a,a
	add	a,b
	ld	(octa+1),a
	xor	a
	ret
plu:
	call	pla0
	jp	patd
ple:
	call	pla0
	ld	a,(num)
	push	af
	call	paul
	pop	af
	inc	a
	call	anpa
	ld	(num),a
	ret
pla0:
	ld	a,(num)
	add	a,3
	call	anpa
	call	getp
	push	hl
	pop	iy
	ld	ix,tona
	ld	a,(ch1)
	call	pla1
	call	kkk
	ld	ix,tonb
	ld	a,(ch2)
	call	pla1
	call	kkk
	ld	ix,tonc
	ld	a,(ch3)
	call	pla1
	jp	kkk
pla1:
	or	a
	jp	z,paus
	ld	a,(iy)
	or	a
	jp	z,paus
	cp	#d0
	jp	z,stopp
	ld	c,a
	rrca
	rrca
	rrca
	rrca
	and	15
	ld	b,a
	ld	a,c
	and	15
	dec	a
	add	a,a
	add	a,a
	ld	c,a
	add	a,a
	add	a,c
	add	a,b
	dec	a
kuli:
	ld	hl,(xy)
	push	hl
	push	af
	ld	a,(iy+1)
	ld	c,a
	and	240
	rrca
	rrca
	rrca
	rrca
	ld	(pins),a
	cp	(ix+lins)
	jr	z,rtl
	ld	(ix+lins),a
	ld	(ix+vol),0
rtl:
	ld	a,c
	and	15
	cp	#f
	jr	z,arp
	cp	#d
	jr	z,dey
	cp	#b
	jr	z,maxv
	cp	#9
	jr	z,mull
	cp	1
	jr	z,offa
	cp	8
	call	nc,harde
mull:
	pop	af
	pop	hl
	ld	(xy),hl
paus:
	inc	iy
	inc	iy
	inc	iy
	ret
stopp:
	xor	a
	call	tuk1
	xor	a
	jr	paus
arp:
	ld	a,(iy+2)
	and	15
	add	a,a
	ld	d,0
	ld	e,a
	ld	hl,#4060
	add	hl,de
	ld	e,(hl)
	inc	hl
	ld	d,(hl)
	ld	(ix+arpe),e
	ld	(ix+arpe+1),d
	ld	(ix+hflg),0
	jr	mull
dey:
	ld	a,(iy+2)
	and	63
	cp	2
	call	nc,psped
	jr	mull
maxv:
	ld	a,(iy+2)
	and	15
	ld	b,a
	ld	a,15
	sub	b
	ld	(ix+vol),a
	jr	mull
offa:
	xor	a
	ld	(ix+arpe+1),a
	ld	(ix+hflg),a
	jr	mull
harde:
	sub	8
	srl	a
	cp	4
	ret	nc
	ld	a,13
	call	reg
	ld	a,11
	ld	c,(iy+2)
	call	reg
	ld	(ix+hflg),16
	xor	a
	ld	(ix+arpe+1),a
	ret
xt:
	ld	a,(hl)
	or	a
	ret	z
	cp	10
	call	z,xyt
	cp	20
	call	z,pena
	push	hl
	call	chr
	pop	hl
	inc	hl
	jp	xt
pena:
	inc	hl
	ld	a,(hl)
	ld	(fad+2),a
	inc	hl
	ld	a,(hl)
	ret
xyt:
	inc	hl
	ld	d,(hl)
	inc	hl
	ld	e,(hl)
	inc	hl
	ld	(xy),de
	ld	a,(hl)
	ret
chr:
	cp	22
	jp	z,inver
	cp	13
	jp	z,retu
	push	hl
	push	de
	push	bc
	push	af
cpos:
	ld	hl,(xy)
	dec	h
	dec	l
	ld	e,h
	ld	d,0
	ld	h,d
	push	de
	ld	d,h
	ld	e,l
	add	hl,hl
	add	hl,hl
	add	hl,de
	add	hl,hl
	add	hl,hl
	add	hl,hl
	add	hl,hl
	pop	de
	add	hl,de
	add	hl,de
	set	7,h
	set	6,h
cend:
	nop
	push	hl
	ld	hl,(xy)
	inc	h
	ld	a,h
	cp	41
	jr	c,nocr
	ld	h,1
	inc	l
	ld	a,l
	cp	25
	jr	c,nocr
	ld	l,1
nocr:
	ld	(xy),hl
	pop	hl
	pop	af
	push	hl
	sub	32
	ld	h,0
	ld	l,a
	add	hl,hl
	add	hl,hl
	add	hl,hl
	add	hl,hl
fad:
	ld	de,font
	add	hl,de
	ex	de,hl
	pop	hl
	ld	b,8
char:
	ld	a,(de)
inv1:
	xor	0
	ld	(hl),a
	inc	hl
	inc	de
	ld	a,(de)
inv2:
	xor	0
	ld	(hl),a
	dec	hl
	inc	de
	ld	a,h
	add	a,8
	ld	h,a
	djnz	char
	pop	bc
	pop	de
	pop	hl
	ret
inver:
	ld	a,(inv1+1)
	xor	240
	ld	(inv1+1),a
	ld	(inv2+1),a
	ret
retu:
	push	hl
	ld	hl,(xy)
	ld	h,1
	inc	l
	cp	25
	jr	c,okclf
	ld	l,25
okclf:
	ld	(xy),hl
	pop	hl
	ret
hexa:
	ld	a,h
	call	hexo
	ld	a,l
hexo:
	push	af
	rrca
	rrca
	rrca
	rrca
	call	hexo2
	pop	af
hexo2:
	and	15
	cp	10
	jr	c,deci
	add	a,7
deci:
	add	a,48
exe:
	jp	chr
spau:
	ld	a,(num)
	sub	8
	jr	rech
spad:
	ld	a,(num)
	add	a,8
	jr	rech
patu:
	ld	a,(num)
	dec	a
	jr	rech
patd:
	ld	a,(num)
	inc	a
rech:
	call	anpa
	ld	(num),a
paul:
	call	getp
	ld	(padr),hl
patt:
	ld	ix,(padr)
	ld	hl,fast
	ld	(exe+1),hl
	ld	hl,tabel
	ld	(sta),hl
	ld	hl,foh
	ld	b,7
	defb	#e
num:
	defb	0
plop:
	push	hl
	push	bc
	ld	a,c
	call	line
	pop	bc
	inc	c
	ld	a,c
hui:
	cp	64
	jr	c,nixo
	ld	c,0
	ld	ix,(panf)
nixo:
	pop	hl
	inc	hl
	djnz	plop
	ld	hl,chr
	ld	(exe+1),hl
toki:
	nop
	ld	a,#c9
	ld	(line),a
	ld	a,(xp)
	call	cur
	xor	a
	ld	(line),a
	ret
line:
	nop
	call	anpa
	ld	b,a
	ld	a,(hl)
	ld	(hu+2),a
	ld	a,b
	call	fasd
	ld	b,3
plo1:
	push	bc
	ld	a,(ix)
	push	af
	and	%11110000
	rrca
	rrca
	rrca
	ld	h,0
	ld	l,a
	ld	de,toene
	add	hl,de
	ld	a,(hl)
	call	fast
	inc	hl
	ld	a,(hl)
	call	fast
	pop	af
	and	15
	add	a,48
	cp	48
	jr	nz,aldi
	sub	3
aldi:
	call	fast
	ld	h,(ix+1)
	ld	l,(ix+2)
	call	hexa
	inc	ix
	inc	ix
	inc	ix
	pop	bc
	djnz	plo1
	ld	a,flo
	ld	(hu+2),a
	ret
fasd:
	ld	c,10
	call	arf
	ld	a,h
	ld	c,1
arf:
	ld	b,#2f
	sub	c
	inc	b
	jr	nc,arf+2
	add	a,c
	ld	h,a
	ld	a,b
fast:
	di
	push	hl
	ld	(stack),sp
	sub	32
	add	a,a
	add	a,a
	ld	h,0
	ld	l,a
	add	hl,hl
	add	hl,hl
hu:
	ld	de,font
	add	hl,de
	ld	sp,(sta)
	pop	de
	ld	(sta),sp
	ld	sp,hl
	ex	de,hl
	ld	bc,#7ff
	pop	de
	ld	(hl),e
	inc	l
	ld	(hl),d
	add	hl,bc
	pop	de
	ld	(hl),e
	inc	l
	ld	(hl),d
	add	hl,bc
	pop	de
	ld	(hl),e
	inc	l
	ld	(hl),d
	add	hl,bc
	pop	de
	ld	(hl),e
	inc	l
	ld	(hl),d
	add	hl,bc
	pop	de
	ld	(hl),e
	inc	l
	ld	(hl),d
	add	hl,bc
	pop	de
	ld	(hl),e
	inc	l
	ld	(hl),d
	add	hl,bc
	pop	de
	ld	(hl),e
	inc	l
	ld	(hl),d
	defb	#31
stack:
	defw	0
	pop	hl
	ei
	ret
getp:
	ld	h,0
	ld	l,a
	ld	d,h
	ld	e,l
	add	hl,hl
	add	hl,hl
	add	hl,hl
	add	hl,de
	ld	de,(panf)
	add	hl,de
	ret
name:
	ld	hl,#2101
	ld	(xy),hl
	ld	a,2
	ld	(fad+2),a
	ld	hl,#4b10
	ld	b,8
namp:
	ld	a,(hl)
	call	chr
	inc	hl
	djnz	namp
	ld	a,flo
	ld	(fad+2),a
	ret
oli:
	cp	32
	jr	c,oli1
	ld	hl,tons
	ld	de,nots
	ld	c,34
	set	5,a
nolp:
	cp	(hl)
	defb	#ca; JP Z
pexe:
	defw	play
	inc	de
	inc	hl
	dec	c
	jr	nz,nolp
oli1:
	xor	a
	ret
hexe:
	ld	a,(octa+1)
	ld	b,a
	ld	a,(de)
	add	a,b
	ld	(lastk),a
	ret
play:
	ld	ix,(chan)
	ld	a,(ins)
	ld	(pins),a
	ld	a,(de)
octa:
	add	a,12
	ld	(lastk),a
kkk:
	or	a
	ret	z
	ld	hl,higt
	add	a,(hl)
path:
	add	a,0
	ld	(ix+anfa),a
	add	a,a
	ld	d,0
	ld	e,a
	ld	hl,notab
	add	hl,de
	ld	c,(hl)
	ld	(ix+key),c
	inc	hl
	ld	c,(hl)
	ld	(ix+key+1),c
nore1:
	ld	a,(pins)
	add	a,a
	ld	b,a
	add	a,a
	add	a,b
	ld	d,0
	ld	e,a
	ld	hl,#4000
	add	hl,de
	ld	e,(ix+insad)
	ld	d,(ix+insad+1)
	ldi
	ldi
	ldi
	ldi
	ldi
	ldi
	ld	h,(ix+ent+1)
	ld	l,(ix+ent)
	ld	de,64
	add	hl,de
	ld	a,(hl)
	ld	(ix+repe),a
	inc	hl
	ld	a,(hl)
	ld	(ix+rlen),a
	ld	(ix+pos),0
	ld	(ix+goo),32
	ld	a,1
	ret
noh:
	ld	ix,tona
	ld	a,(ch1)
	call	playe
	ld	ix,tonb
	ld	a,(ch2)
	call	playe
	ld	ix,tonc
	ld	a,(ch3)
playe:
	or	a
	jr	nz,alf
	ld	(ix+vol1),0
	ret
alf:
	ld	a,(ix+goo)
	or	a
	jr	nz,dacha
	ld	a,(ix+rlen)
	or	a
	ret	z
	ld	(ix+goo),a
	ld	a,(ix+repe)
	ld	(ix+pos),a
dacha:
	ld	d,0
	ld	e,(ix+pos)
	ld	a,(ix+arpe+1)
	or	a
	jr	z,not0
	ld	h,a
	ld	l,(ix+arpe)
	add	hl,de
	ld	a,(hl)
	ld	b,(ix+anfa)
	add	a,b
	add	a,a
	ld	b,0
	ld	c,a
	ld	hl,notab
	add	hl,bc
	ld	a,(hl)
	ld	(ix+key),a
	inc	hl
	ld	a,(hl)
	ld	(ix+key+1),a
	;
not0:
	ld	h,(ix+ent+1)
	ld	l,(ix+ent)
	add	hl,de
	add	hl,de
	ld	c,(hl)
	inc	hl
	ld	b,(hl)
	ld	l,(ix+key)
	ld	h,(ix+key+1)
	add	hl,bc
	ld	(ix+dat),l
	ld	(ix+dat+1),h
	ld	c,l
	ld	a,(ix+ton)
	call	reg
	ld	c,h
	ld	a,(ix+ton+1)
	call	reg
	;
	ld	h,(ix+env+1)
	ld	l,(ix+env)
	add	hl,de
	ld	a,(hl)
lend:
	bit	7,a
	jr	nz,not2
	and	15
	sub	(ix+vol)
	jr	nc,lunt
	xor	a
lunt:
	ld	(ix+vol1),a
	or	(ix+hflg)
	ld	c,a
	ld	a,(ix+laut)
	call	reg
	;
not2:
	ld	l,(ix+enn)
	ld	h,(ix+enn+1)
	add	hl,de
	ld	a,(hl)
	bit	7,a
	jp	nz,dece
	and	31
	ld	b,(ix+nobit)
	ld	c,a
	or	a
	ld	a,b
	jr	z,woff
	push	af
	ld	a,6
	call	reg
	pop	af
	sub	64
woff:
	ld	(steb),a
	ld	a,(reg7)
	defb	#cb
steb:
	nop
	ld	(reg7),a
	ld	c,a
	ld	a,7
	call	reg
dece:
	inc	(ix+pos)
	dec	(ix+goo)
	ret
tein:
	xor	a
	ld	(tona+vol),a
	ld	(tonb+vol),a
	ld	(tonc+vol),a
	ret
taus:
	ld	ix,tona
	call	tuk
	ld	ix,tonb
	call	tuk
	ld	ix,tonc
tuk:
	xor	a
	ld	(ix+hflg),a
	ld	(ix+arpe+1),a
tuk1:
	ld	(ix+vol1),a
	ld	(ix+rlen),a
	ld	(ix+goo),a
	ld	c,a
	ld	a,(ix+laut)
reg:
	di
	ld	b,#f4
	out	(c),a
	ld	b,#f6
	in	a,(c)
	or	#c0
	out	(c),a
	and	#3f
	out	(c),a
	ld	b,#f4
	out	(c),c
	ld	b,#f6
	ld	c,a
	or	#80
	out	(c),a
	out	(c),c
	ei
	ret
rick:
	ld	hl,roff
	ld	b,0
rilk:
	ld	a,(hl)
	or	a
	ret	z
	push	hl
	call	#bb39
	pop	hl
	inc	hl
	jr	rilk
sync:
	ld	b,#f5
wait:
	in	a,(c)
	rra
	jp	nc,wait
	ret
irq:
	di
	push	ix
	push	hl
	push	de
	push	bc
	push	af
	call	noh
	call	spie1
	pop	af
	pop	bc
	pop	de
	pop	hl
	pop	ix
	ei
	ret
	;
ch:
	nop
ins:
	nop
pins:
	nop
patn:
	nop
peng:
	nop
pthi:
	nop
lke:
	nop
typ:
	nop
merk:
	nop
lastk:
	nop
mp:
	nop
ppos:
	nop
punz:
	nop
spe1:
	nop
dflg:
	nop
par:
	nop
spat:
	nop
todo:
	defb	1
ch1:
	defb	1
ch2:
	defb	1
ch3:
	defb	1
xp:
	defb	1
oct:
	defb	3
dly:
	defb	6
down:
	nop
reg7:
	defb	ein
pek:
	defb	61
luc:
	defw	0
pnt:
	defw	0
rjp:
	defw	0
voic:
	defw	0
blk:
	defw	menu
key1:
	defw	#c02
posa:
	defw	#4ad0
eadr:
	defw	#4c00
panf:
	defw	#4c00
padr:
	defw	#4c00
sta:
	defw	tabel
npln:
	defw	576
foh:
	defb	2,2,2,flo,2,2,2
funk:
	defb	10,2,18,32,32,0
tons:
    defm	"zsxdcvgbhnjm,l.:/"
	defm	"q2w3er5t6y7ui9o0p"
	nop
alct:
	defw	#4080,#3f7f,0,#4b10,17*8,32,#ffff
snct:
	defw	#4ad0,64,0,#4b10,8,32,#4ba0,#345f,0,#ffff
inct:
	defw	#4080,#a4f,0,#4b18,16*8,32,#ffff
toene:
	defm	"--C-C#D-D#E-F-F#G-G#A-A#B-R-"
	nop
nots:
	defb	0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16
	defb	12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28
pss:
	defb	7,0,9,1,11,2,12,3,13,4,14,5
	defb	17,0,19,1,21,2,22,3,23,4,24,5
	defb	27,0,29,1,31,2,32,3,33,4,34,5
roff:
	defb	64,65,57,56,49,48,41,40,33,32,25,24,16
	defb	67,59,58,50,51,43,42,35,34,27,26,17
	defb	69,60,61,53,52,44,45,37,36,29,28,19
	defb	71,63,62,55,54,46,38,39,31,30,22,47
	defb	0
notab:
	defw	3822,3608,3405,3214,3034,2863
	defw	2703,2551,2408,2273,2145,2025
	defw	1911,1804,1703,1607,1517,1432
	defw	1351,1276,1204,1136,1073,1012
	defw	956,902,851,804,758,716
	defw	676,638,602,568,536,506
	defw	478,451,426,402,379,358
	defw	338,319,301,284,268,253
	defw	239,225,213,201,190,179
	defw	169,159,150,142,134,127
	defw	119,113,106,100,95,89
	defw	84,80,75,71,67,63
	defw	60,56,53,50,47,45
	defw	42,40,38,36,34,32
	defw	30,28,27,25,24,22
	defw	21,20,19,18,17,16
	defw	15
	defs	10
	;
sure:
	defm	"Are you sure ? "
	nop
cltx:
	defb	10,1,9
	defm	"Clear [A]ll, [S]ong or [I]nstruments ?"
	defb	13,13
defm	"Choose: "
	nop
msg1:
	defb	10,1,1,20,2
defm	"- The Soundtrakker V1.0 - Song: "
	defb	13,20,flo
	defm	" DISKOP   CLEAR   PATTERN  RECORD  SONG "
	defm	" INS.ED  ARPEG.ED  SETUP   OTHER   EDIT "
	nop
msg1b:

	defb	13
defm	"A  SngPos:00 Length:00 Octave 0"
	defb	13
defm	"B  Pattrn:00 LoopTo:00 Instr. 0"
	defb	13
defm	"C  Height: 0 Delay :06"
	nop
menu:
	defb	9
	defb	1,2,6
	defm	"DISKOP"
	defw	disk
	defb	10,2,5
	defm	"CLEAR"
	defw	clir
	defb	18,2,7
	defm	"PATTERN"
	defw	spie
	defb	27,2,6
	defm	"RECORD"
	defw	rec
	defb	35,2,4
	defm	"SONG"
	defw	song
	defb	1,3,6
	defm	"INS.ED"
	defw	insed
	defb	9,3,8
	defm	"ARPEG.ED"
	defw	orned
	defb	19,3,5
	defm	"SETUP"
	defw	setu
	defb	27,3,5
	defm	"OTHER"
	defw	other
	defb	35,3,4
	defm	"EDIT"
	defw	edit
	;
tona:
	defw	0
	defb	0,1
	defb	8,0
	defb	0
	defw	0
	defb	0,0
	defb	#df
	defw	0
tona1:
	defw	#4080,#44a0,#46b0
	defb	0,32,0,0
	defw	tona1
	defw	0
tonb:
	defw	0
	defb	2,3
	defb	9,0
	defb	0
	defw	0
	defb	0,0
	defb	#e7
	defw	0
tonb1:
	defw	#4080,#44a0,#46b0
	defb	0,32,0,0
	defw	tonb1
	defw	0
tonc:
	defw	0
	defb	4,5
	defb	10,0
	defb	0
	defw	0
	defb	0,0
	defb	#ef
	defw	0
tonc1:
	defw	#4080,#44a0,#46b0
	defb	0,32,0,0
	defw	tonc1
	defw	0
dat:
	equ	0
ton:
	equ	2
laut:
	equ	4
hflg:
	equ	6
anfa:
	equ	7
vol:
	equ	8
vol1:
	equ	9
lins:
	equ	10
nobit:
	equ	11
arpe:
	equ	12
ent:
	equ	14
env:
	equ	16
enn:
	equ	18
repe:
	equ	20
rlen:
	equ	21
pos:
	equ	22
goo:
	equ	23
insad:
	equ	24
key:
	equ	26
ein:
	equ	56
aus:
	equ	63
	;ENDE